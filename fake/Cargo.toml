[package]
name = "fake"
version = "4.1.0"
authors = ["cksac <cs.cksac@gmail.com>"]
description = "An easy to use library and command line for generating fake data like name, number, address, lorem, dates, etc."
keywords = ["faker", "data", "generator", "random"]
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/cksac/fake-rs"
homepage = "https://github.com/cksac/fake-rs"
edition = "2021"
rust-version = "1.63"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
dummy = { version = "0.10", path = "../dummy_derive", optional = true }
rand = "0.9"
random_color = { version = "1", optional = true }
deunicode = "1.6"
chrono = { version = "0.4", features = [
    "std",
], default-features = false, optional = true }
chrono-tz = { version = "0.10", optional = true }
email_address = { version = "0.2", optional = true }
geo-types = { version = "0.7", default-features = false, optional = true }
http = { version = "1", optional = true }
semver = { version = "1", optional = true }
serde_json = { version = "1", optional = true }
ulid = { version = "1", optional = true }
uuid = { version = "1", features = ["v1", "v3", "v4", "v5", "v6", "v7", "v8"], optional = true }
time = { version = "0.3", features = ["formatting"], optional = true }
num-traits = { version = "0.2", optional = true }
rust_decimal = { version = "1", default-features = false, optional = true }
bigdecimal-rs = { version = "0.4", package = "bigdecimal", default-features = false, optional = true }
zerocopy = { version = "0.8", optional = true }
rand_core = { version = "0.9", optional = true }
glam = { version = "0.29", optional = true }
url-escape = { version = "0.1", optional = true }
bson = { version = "2", optional = true }
url = { version = "2", optional = true }
indexmap = { version = "2", optional = true}
clap = { version = "4.0.32", optional = true, features=["cargo"] }
base64 = { version = "0.22.1", optional = true }
enum_dispatch = "0.3.13"

[dev-dependencies]
chrono = { version = "0.4", features = ["clock"], default-features = false }
fake = { path = ".", features = ["derive"] }
proptest = { version = "1", features = ["std"], default-features = false }
rand_chacha = "0.9.0"

[features]
# Provide derive(Dummy) macros.
derive = ["dummy"]
# Support "always true" RNGs; see https://github.com/cksac/fake-rs/issues/128
# and always-true tests
always-true-rng = ["rand_core"]
# allow to use AlwaysTrueRng to generate non-empty collections
maybe-non-empty-collections = ['always-true-rng']
bigdecimal = ["bigdecimal-rs", "rust_decimal"]
geo = ["geo-types", "num-traits"]
http = ["dep:http", "url-escape"]
bson_oid = ["bson"]
cli = ["dep:clap","random_color","chrono","http"]
base64 = ["dep:base64"]

[[example]]
name = "basic"
path = "examples/basic.rs"
required-features = ["derive"]

[[example]]
name = "derive"
path = "examples/derive.rs"
required-features = [
    "derive",
    "http",
    "chrono",
    "uuid",
    "random_color",
    "rust_decimal",
]

[[example]]
name = "usage"
path = "examples/usage.rs"
required-features = ["derive"]

[[bin]]
name = "fake"
path = "src/bin/cli/main.rs"
required-features = [
    "cli"
]
